ifeq ($(UQBT),)
override UQBT = gsl
else ifeq ($(UQBT),gsl)
else
override UQBT = tri
endif

ifeq ($(UQBT),gsl)
DEFINES = \
        -D__APPL_USES_GSL__ -D__UQ_USES_GSL__
else
DEFINES = \
        -D__APPL_USES_TRILINOS__ -D__UQ_USES_TRILINOS__
endif

ifeq ($(TRILINOS_INCLUDE_PATH_FOR_QUESO_TOOL),)
override TRILINOS_INCLUDE_PATH_FOR_QUESO_TOOL = $(TRILINOS_DIR)/include
endif
ifeq ($(MPI_INCLUDE_PATH_FOR_QUESO_TOOL),)
override MPI_INCLUDE_PATH_FOR_QUESO_TOOL = $(MPI_DIR)/include
endif
ifeq ($(BOOST_INCLUDE_PATH_FOR_QUESO_TOOL),)
BOOST_INCLUDE ?= /usr/include
override BOOST_INCLUDE_PATH_FOR_QUESO_TOOL = $(BOOST_INCLUDE)
endif
ifeq ($(GSL_INCLUDE_PATH_FOR_QUESO_TOOL),)
override GSL_INCLUDE_PATH_FOR_QUESO_TOOL = /usr/include/gsl
endif
ifeq ($(TRILINOS_LIB_PATH_FOR_QUESO_TOOL),)
override TRILINOS_LIB_PATH_FOR_QUESO_TOOL = $(TRILINOS_DIR)/lib
endif
ifeq ($(MPI_LIB_PATH_FOR_QUESO_TOOL),)
override MPI_LIB_PATH_FOR_QUESO_TOOL = $(MPI_DIR)/lib
endif
ifeq ($(BOOST_LIB_PATH_FOR_QUESO_TOOL),)
BOOST_LIB ?= /usr/lib
override BOOST_LIB_PATH_FOR_QUESO_TOOL = $(BOOST_LIB)
endif
ifeq ($(GSL_LIB_PATH_FOR_QUESO_TOOL),)
GSL_HOME ?= /usr
override GSL_LIB_PATH_FOR_QUESO_TOOL = $GSL_HOME/lib
endif


include $(TRILINOS_INCLUDE_PATH_FOR_QUESO_TOOL)/Makefile.export.epetra

QUESO_TOOL_INCLUDE = -I$(MPI_INCLUDE_PATH_FOR_QUESO_TOOL) \
                     -I$(BOOST_INCLUDE_PATH_FOR_QUESO_TOOL) \
                     -I$(GSL_INCLUDE_PATH_FOR_QUESO_TOOL) \
                     $(EPETRA_INCLUDES)

QUESO_TOOL_LIBS =    -L$(MPI_LIB_PATH_FOR_QUESO_TOOL) \
                     -L$(TRILINOS_LIB_PATH_FOR_QUESO_TOOL) \
                     -L$(BOOST_LIB_PATH_FOR_QUESO_TOOL) \
                     -lboost_program_options \
                     -L$(GSL_LIB_PATH_FOR_QUESO_TOOL) \
                     -lgsl \
                     $(EPETRA_LIBS)


AR ?= ar
ARFLAGS ?= -rv
CXX ?= g++
CXXFLAGS += -Wall -c

default: all

echo_basic_type:
	@echo 'UQBT = ' $(UQBT)

clean_all: echo_basic_type clean_lib clean_exec

.SUFFIXES: .o .C
