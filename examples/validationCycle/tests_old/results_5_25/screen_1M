
=================================
 QUESO toolkit, version 0.21, released on Oct/08/2008
=================================

Beginning run at Tue Oct 21 17:45:33 2008

Environment options:
  --uqEnv_help               produce help message for uq environment
  --uqEnv_verbosity arg (=0) set verbosity
  --uqEnv_seed arg (=0)      set seed

After getting option values, state of uqEnvironment object is:
m_verbosity = 2
m_seed = 0

Beginning run of 'uqTgaEx4' example

Ascii table file 'params.tab' has 5 lines and specifies 2 valid lines.
Ascii table file 'qois.tab' has 4 lines and specifies 1 valid lines.
Beginning stage 1 at Tue Oct 21 17:45:33 2008

Entering uqCalibProblem<P_V,P_M>::constructor(): prefix = s1_cal_
UQ Calibration Problem:
  --s1_cal_help                     produce help message for calibration proble
                                    m
  --s1_cal_computeSolution arg (=1) compute solution process
  --s1_cal_outputFileName arg (=.)  name of output file

In uqCalibProblem<P_V,P_M>::constructor(): after getting values of options, state of object is:

s1_cal_computeSolution = 1
s1_cal_outputFileName = s1Output.m

Leaving uqCalibProblem<P_V,P_M>::constructor(): prefix = s1_cal_
In uqVectorSpace<V,M>::newGaussianMatrix(): i = 0, variance = inf
In uqVectorSpace<V,M>::newGaussianMatrix(): i = 1, variance = inf
Entering uqMarkovChainSG<P_V,P_M>::constructor()
Bayesian Markov chain options:
  --s1_cal_mc_help                                     produce help message for
                                                       Bayesian Markov chain 
                                                       distr. calculator
  --s1_cal_mc_chain_type arg (=1)                      type of chain (1=Markov,
                                                       2=White noise)
  --s1_cal_mc_chain_size arg (=100)                    size of chain
  --s1_cal_mc_chain_outputFileName arg (=.)            name of output file
  --s1_cal_mc_chain_use2 arg (=0)                      use chain2
  --s1_cal_mc_chain_generateExtra arg (=0)             generate extra chains
  --s1_cal_mc_chain_displayPeriod arg (=500)           period of message 
                                                       display during chain 
                                                       generation
  --s1_cal_mc_chain_measureRunTimes arg (=0)           measure run times
  --s1_cal_mc_chain_write arg (=0)                     write chain values to 
                                                       the output file
  --s1_cal_mc_chain_computeStats arg (=0)              compute statistics on 
                                                       chain
  --s1_cal_mc_filteredChain_generate arg (=0)          generate filtered chain
  --s1_cal_mc_filteredChain_discardedPortion arg (=0)  initial discarded 
                                                       portion for chain 
                                                       filtering
  --s1_cal_mc_filteredChain_lag arg (=1)               spacing for chain 
                                                       filtering
  --s1_cal_mc_filteredChain_write arg (=0)             write filtered chain
  --s1_cal_mc_filteredChain_computeStats arg (=0)      compute statistics on 
                                                       filtered chain
  --s1_cal_mc_dr_maxNumExtraStages arg (=0)            'dr' maximum number of 
                                                       extra stages
  --s1_cal_mc_dr_scalesForExtraStages arg (=1.)        'dr' list of scales for 
                                                       proposal cov matrices 
                                                       from 2nd stage on
  --s1_cal_mc_am_initialNonAdaptInterval arg (=0)      'am' initial non 
                                                       adaptation interval
  --s1_cal_mc_am_adaptInterval arg (=0)                'am' adaptation interval
  --s1_cal_mc_am_eta arg (=1)                          'am' eta
  --s1_cal_mc_am_epsilon arg (=1.0000000000000001e-05) 'am' epsilon

In uqMarkovChainSG<P_V,P_M>::constructor(): after getting values of options with prefix 's1_cal_mc_', state of  object is:
s1_cal_mc_chain_type = 1
s1_cal_mc_chain_size = 1048576
s1_cal_mc_chain_outputFileName = s1ExtraOutput.m
s1_cal_mc_chain_generateExtra = 0
s1_cal_mc_chain_displayPeriod = 20000
s1_cal_mc_chain_measureRunTimes = 1
s1_cal_mc_chain_write = 0
s1_cal_mc_chain_computeStats = 1
s1_cal_mc_filteredChain_generate = 1
s1_cal_mc_filteredChain_discardedPortion = 0
s1_cal_mc_filteredChain_lag = 20
s1_cal_mc_filteredChain_write = 0
s1_cal_mc_filteredChain_computeStats = 1
s1_cal_mc_dr_maxNumExtraStages = 1
s1_cal_mc_dr_scalesForExtraStages = 1 5 
s1_cal_mc_am_initialNonAdaptInterval = 0
s1_cal_mc_am_adaptInterval = 100
s1_cal_mc_am_eta = 1.92
s1_cal_mc_am_epsilon = 1e-05

Entering uqChainStatisticalOptions::constructor(), prefix = s1_cal_mc_chain_stats_
After getting values of options with prefix 's1_cal_mc_chain_stats_', state of uqChainStatisticalOptions object is:

s1_cal_mc_chain_stats_initialDiscardedPortions = 0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 
s1_cal_mc_chain_stats_bmm_run = 0
s1_cal_mc_chain_stats_bmm_lengths = 50 100 200 250 
s1_cal_mc_chain_stats_fft_compute = 0
s1_cal_mc_chain_stats_fft_paramId = 0
s1_cal_mc_chain_stats_fft_size = 2048
s1_cal_mc_chain_stats_fft_testInversion = 1
s1_cal_mc_chain_stats_fft_write = 1
s1_cal_mc_chain_stats_psd_compute = 0
s1_cal_mc_chain_stats_psd_paramId = 0
s1_cal_mc_chain_stats_psd_numBlocks = 8
s1_cal_mc_chain_stats_psd_hopSizeRatio = 0.5
s1_cal_mc_chain_stats_psd_write = 1
s1_cal_mc_chain_stats_psdAtZero_compute = 0
s1_cal_mc_chain_stats_psdAtZero_numBlocks = 32 
s1_cal_mc_chain_stats_psdAtZero_hopSizeRatio = 0.5
s1_cal_mc_chain_stats_psdAtZero_display = 1
s1_cal_mc_chain_stats_psdAtZero_write = 1
s1_cal_mc_chain_stats_geweke_compute = 1
s1_cal_mc_chain_stats_geweke_naRatio = 0.1
s1_cal_mc_chain_stats_geweke_nbRatio = 0.5
s1_cal_mc_chain_stats_geweke_display = 1
s1_cal_mc_chain_stats_geweke_write = 1
s1_cal_mc_chain_stats_corr_computeViaDef = 0
s1_cal_mc_chain_stats_corr_computeViaFft = 1
s1_cal_mc_chain_stats_corr_secondLag = 2
s1_cal_mc_chain_stats_corr_lagSpacing = 2
s1_cal_mc_chain_stats_corr_numLags = 15
s1_cal_mc_chain_stats_corr_display = 1
s1_cal_mc_chain_stats_corr_write = 1
s1_cal_mc_chain_stats_hist_compute = 0
s1_cal_mc_chain_stats_hist_numInternalBins = 250
s1_cal_mc_chain_stats_kde_compute = 0
s1_cal_mc_chain_stats_kde_numEvalPositions = 250

Leaving uqChainStatisticalOptions::constructor(), prefix = s1_cal_mc_chain_stats_
Entering uqChainStatisticalOptions::constructor(), prefix = s1_cal_mc_filteredChain_stats_
After getting values of options with prefix 's1_cal_mc_filteredChain_stats_', state of uqChainStatisticalOptions object is:

s1_cal_mc_filteredChain_stats_initialDiscardedPortions = 0 
s1_cal_mc_filteredChain_stats_bmm_run = 0
s1_cal_mc_filteredChain_stats_bmm_lengths = 50 100 200 250 
s1_cal_mc_filteredChain_stats_fft_compute = 0
s1_cal_mc_filteredChain_stats_fft_paramId = 0
s1_cal_mc_filteredChain_stats_fft_size = 2048
s1_cal_mc_filteredChain_stats_fft_testInversion = 1
s1_cal_mc_filteredChain_stats_fft_write = 1
s1_cal_mc_filteredChain_stats_psd_compute = 0
s1_cal_mc_filteredChain_stats_psd_paramId = 0
s1_cal_mc_filteredChain_stats_psd_numBlocks = 8
s1_cal_mc_filteredChain_stats_psd_hopSizeRatio = 0.5
s1_cal_mc_filteredChain_stats_psd_write = 1
s1_cal_mc_filteredChain_stats_psdAtZero_compute = 0
s1_cal_mc_filteredChain_stats_psdAtZero_numBlocks = 32 
s1_cal_mc_filteredChain_stats_psdAtZero_hopSizeRatio = 0.5
s1_cal_mc_filteredChain_stats_psdAtZero_display = 1
s1_cal_mc_filteredChain_stats_psdAtZero_write = 1
s1_cal_mc_filteredChain_stats_geweke_compute = 0
s1_cal_mc_filteredChain_stats_geweke_naRatio = 0.1
s1_cal_mc_filteredChain_stats_geweke_nbRatio = 0.5
s1_cal_mc_filteredChain_stats_geweke_display = 1
s1_cal_mc_filteredChain_stats_geweke_write = 1
s1_cal_mc_filteredChain_stats_corr_computeViaDef = 0
s1_cal_mc_filteredChain_stats_corr_computeViaFft = 1
s1_cal_mc_filteredChain_stats_corr_secondLag = 2
s1_cal_mc_filteredChain_stats_corr_lagSpacing = 2
s1_cal_mc_filteredChain_stats_corr_numLags = 15
s1_cal_mc_filteredChain_stats_corr_display = 1
s1_cal_mc_filteredChain_stats_corr_write = 1
s1_cal_mc_filteredChain_stats_hist_compute = 1
s1_cal_mc_filteredChain_stats_hist_numInternalBins = 250
s1_cal_mc_filteredChain_stats_kde_compute = 1
s1_cal_mc_filteredChain_stats_kde_numEvalPositions = 250

Leaving uqChainStatisticalOptions::constructor(), prefix = s1_cal_mc_filteredChain_stats_
Leaving uqMarkovChainSG<P_V,P_M>::constructor()
In uqMarkovChainSG<P_V,P_M>::prepareForNextChain(): using suplied proposalCovMatrix, whose contents are:
1.45202e+20 0 
0 1.19902e+08 

In uqMarkovChainSG<P_V,P_M>::prepareForNextChain(), m_lowerCholProposalCovMatrices[0] contents are:
1.205e+10 0 
0 10950 

Starting the generation of Markov chain s1_cal_mc_chain, with 1048576 positions...
In uqMarkovChainSG<P_V,P_M>::intGenerateSequence(): contents of initial position are:
2.41e+11 219000 
Finished generating 20000 positions
Finished generating 40000 positions
Finished generating 60000 positions
Finished generating 80000 positions
Finished generating 100000 positions
Finished generating 120000 positions
Finished generating 140000 positions
Finished generating 160000 positions
Finished generating 180000 positions
Finished generating 200000 positions
Finished generating 220000 positions
Finished generating 240000 positions
Finished generating 260000 positions
Finished generating 280000 positions
Finished generating 300000 positions
Finished generating 320000 positions
Finished generating 340000 positions
Finished generating 360000 positions
Finished generating 380000 positions
Finished generating 400000 positions
Finished generating 420000 positions
Finished generating 440000 positions
Finished generating 460000 positions
Finished generating 480000 positions
Finished generating 500000 positions
Finished generating 520000 positions
Finished generating 540000 positions
Finished generating 560000 positions
Finished generating 580000 positions
Finished generating 600000 positions
Finished generating 620000 positions
Finished generating 640000 positions
Finished generating 660000 positions
Finished generating 680000 positions
Finished generating 700000 positions
Finished generating 720000 positions
Finished generating 740000 positions
Finished generating 760000 positions
Finished generating 780000 positions
Finished generating 800000 positions
Finished generating 820000 positions
Finished generating 840000 positions
Finished generating 860000 positions
Finished generating 880000 positions
Finished generating 900000 positions
Finished generating 920000 positions
Finished generating 940000 positions
Finished generating 960000 positions
Finished generating 980000 positions
Finished generating 1000000 positions
Finished generating 1020000 positions
Finished generating 1040000 positions
Finished the generation of Markov chain s1_cal_mc_chain, with 1048576 positions
Some information about this chain:
  Chain run time       = 76.682 seconds

 Breaking of the chain run time:

  Candidate run time   = 4.32659 seconds (5.64225%)
  Target d. run time   = 62.6074 seconds (81.6456%)
  Mh alpha run time    = 0.751737 seconds (0.980331%)
  Dr alpha run time    = 2.35761 seconds (3.07454%)
----------------------   --------------
  Sum                  = 70.0434 seconds (91.3427%)

 Other run times:
  DR run time          = 31.1817 seconds (40.6637%)
  AM run time          = 0 seconds (0%)
  Rejection percentage = 46.1344 %
   Outbound percentage = 30.7066 %
Opening output file 's1ExtraOutput.m' for chain s1_cal_mc_chain


-----------------------------------------------------
 Computing statistics for chain s1_cal_mc_chain ...
-----------------------------------------------------

In uqBaseVectorSequence<V,M>::computeStatistics(): initial positions for statistics = 0 52428 104857 157286 209715 262144 314572 367001 419430

-----------------------------------------------------
Computing mean, sample variance and population variance

Estimated variance of sample mean for the whole chain s1_cal_mc_chain, under independence assumption:
1.27117e+14
6.62197

Mean and variances took 1.09425 seconds

Mean, sample std, population std
Parameter    Mean         SampleStd         Popul.Std
 A_param   2.5997e+11   1.1545e+10   1.1545e+10
 E_param   1.9684e+05   2.6351e+03   2.6351e+03

-----------------------------------------------------
Computing Geweke coefficients
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 104857, numBlocksA = 323, meanA = 2.59915e+11, psdA = 4.729e+20, varOfMeanA = 2.83369e+16
, dataSizeB = 524288, numBlocksB = 724, meanB = 2.60016e+11, psdB = 4.8278e+20, varOfMeanB = 5.78574e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 104857, numBlocksA = 323, meanA = 196810, psdA = 7.29847e+06, varOfMeanA = 437.335
, dataSizeB = 524288, numBlocksB = 724, meanB = 196830, psdB = 6.25228e+06, varOfMeanB = 74.9287
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 99614, numBlocksA = 315, meanA = 2.60145e+11, psdA = 4.57552e+20, varOfMeanA = 2.88602e+16
, dataSizeB = 498074, numBlocksB = 705, meanB = 2.60018e+11, psdB = 4.90176e+20, varOfMeanB = 6.18355e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 99614, numBlocksA = 315, meanA = 196828, psdA = 8.12446e+06, varOfMeanA = 512.453
, dataSizeB = 498074, numBlocksB = 705, meanB = 196830, psdB = 6.26809e+06, varOfMeanB = 79.0718
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 94371, numBlocksA = 307, meanA = 2.60226e+11, psdA = 4.66995e+20, varOfMeanA = 3.10924e+16
, dataSizeB = 471859, numBlocksB = 686, meanB = 2.6001e+11, psdB = 4.85293e+20, varOfMeanB = 6.46207e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 94371, numBlocksA = 307, meanA = 196860, psdA = 6.63237e+06, varOfMeanA = 441.581
, dataSizeB = 471859, numBlocksB = 686, meanB = 196830, psdB = 6.11596e+06, varOfMeanB = 81.439
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 89129, numBlocksA = 298, meanA = 2.59736e+11, psdA = 5.52472e+20, varOfMeanA = 3.89467e+16
, dataSizeB = 445645, numBlocksB = 667, meanB = 2.60016e+11, psdB = 4.86947e+20, varOfMeanB = 6.8655e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 89129, numBlocksA = 298, meanA = 196822, psdA = 6.61406e+06, varOfMeanA = 466.261
, dataSizeB = 445645, numBlocksB = 667, meanB = 196830, psdB = 6.41636e+06, varOfMeanB = 90.4648
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 83886, numBlocksA = 289, meanA = 2.59643e+11, psdA = 4.20398e+20, varOfMeanA = 3.14884e+16
, dataSizeB = 419430, numBlocksB = 647, meanB = 2.5999e+11, psdB = 4.76222e+20, varOfMeanB = 7.13395e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 83886, numBlocksA = 289, meanA = 196823, psdA = 6.33873e+06, varOfMeanA = 474.78
, dataSizeB = 419430, numBlocksB = 647, meanB = 196829, psdB = 6.53669e+06, varOfMeanB = 97.9215
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 78643, numBlocksA = 280, meanA = 2.60025e+11, psdA = 4.42315e+20, varOfMeanA = 3.53388e+16
, dataSizeB = 393216, numBlocksB = 627, meanB = 2.60037e+11, psdB = 4.77815e+20, varOfMeanB = 7.63499e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 78643, numBlocksA = 280, meanA = 196871, psdA = 5.96115e+06, varOfMeanA = 476.266
, dataSizeB = 393216, numBlocksB = 627, meanB = 196829, psdB = 6.33069e+06, varOfMeanB = 101.158
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 73400, numBlocksA = 270, meanA = 2.60054e+11, psdA = 3.79005e+20, varOfMeanA = 3.24436e+16
, dataSizeB = 367002, numBlocksB = 605, meanB = 2.60023e+11, psdB = 4.81631e+20, varOfMeanB = 8.24567e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 73400, numBlocksA = 270, meanA = 196904, psdA = 5.46941e+06, varOfMeanA = 468.192
, dataSizeB = 367002, numBlocksB = 605, meanB = 196829, psdB = 6.72507e+06, varOfMeanB = 115.135
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 68157, numBlocksA = 261, meanA = 2.59757e+11, psdA = 4.47298e+20, varOfMeanA = 4.1235e+16
, dataSizeB = 340787, numBlocksB = 583, meanB = 2.60003e+11, psdB = 4.93083e+20, varOfMeanB = 9.0911e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 68157, numBlocksA = 261, meanA = 196845, psdA = 5.59525e+06, varOfMeanA = 515.809
, dataSizeB = 340787, numBlocksB = 583, meanB = 196829, psdB = 6.3398e+06, varOfMeanB = 116.889
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 62914, numBlocksA = 250, meanA = 2.59911e+11, psdA = 4.40387e+20, varOfMeanA = 4.39812e+16
, dataSizeB = 314573, numBlocksB = 560, meanB = 2.60017e+11, psdB = 4.81021e+20, varOfMeanB = 9.60776e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 62914, numBlocksA = 250, meanA = 196855, psdA = 5.54474e+06, varOfMeanA = 553.75
, dataSizeB = 314573, numBlocksB = 560, meanB = 196831, psdB = 6.41738e+06, varOfMeanB = 128.179

Computed Geweke coefficients with 10% and 50% percentages (each column corresponds to a different initial position on the full chain)
Parameter            0          52428          104857          157286          209715          262144          314572          367001          419430
  A_param  -5.4653e-01   6.7789e-01   1.1117e+00  -1.3092e+00  -1.7666e+00  -5.6417e-02   1.5229e-01  -1.0980e+00  -4.5911e-01
  E_param  -8.7194e-01  -1.1191e-01   1.3433e+00  -3.3754e-01  -2.2105e-01   1.7558e+00   3.0753e+00   6.3664e-01   9.1265e-01
Chain Geweke took 10.2083 seconds

-----------------------------------------------------
Computing autocorrelation coefficients (via fft)
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): lags for autocorrelation (via fft) =  1 2 4 6 8 10 12 14 16 18 20 22 24 26 28
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 0, numPos = 1048576, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 52428, numPos = 996148, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 104857, numPos = 943719, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 157286, numPos = 891290, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 209715, numPos = 838861, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 262144, numPos = 786432, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 314572, numPos = 734004, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 367001, numPos = 681575, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 419430, numPos = 629146, lagsForCorrs.size() = 15, corrVecs.size() = 15

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 0
3.72017e+14
8.95386


Computed autocorrelation coefficients (via fft), for subchain beggining at position 0 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   9.1389e-01   8.3502e-01   6.9699e-01   5.8206e-01   4.8649e-01   4.0634e-01   3.3922e-01   2.8354e-01   2.3702e-01   1.9818e-01   1.6552e-01   1.3853e-01   1.1561e-01   9.6209e-02   8.0192e-02
  E_param   6.8607e-01   4.7340e-01   2.3138e-01   1.1732e-01   6.1764e-02   3.5371e-02   2.1823e-02   1.4470e-02   9.3334e-03   7.0171e-03   4.5452e-03   3.7625e-03   2.6900e-03   1.5828e-03   8.5167e-04

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 52428
3.6596e+14
11.6734


Computed autocorrelation coefficients (via fft), for subchain beggining at position 52428 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   9.1392e-01   8.3508e-01   6.9709e-01   5.8213e-01   4.8647e-01   4.0636e-01   3.3925e-01   2.8354e-01   2.3693e-01   1.9815e-01   1.6558e-01   1.3861e-01   1.1569e-01   9.6175e-02   7.9917e-02
  E_param   6.8631e-01   4.7395e-01   2.3222e-01   1.1803e-01   6.2214e-02   3.5671e-02   2.2201e-02   1.4739e-02   9.5872e-03   6.9374e-03   4.5143e-03   3.8952e-03   3.0879e-03   1.7408e-03   1.3467e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 104857
4.17187e+14
22.4068


Computed autocorrelation coefficients (via fft), for subchain beggining at position 104857 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   9.1390e-01   8.3501e-01   6.9699e-01   5.8209e-01   4.8657e-01   4.0667e-01   3.3974e-01   2.8405e-01   2.3753e-01   1.9883e-01   1.6636e-01   1.3954e-01   1.1661e-01   9.6983e-02   8.0671e-02
  E_param   6.8637e-01   4.7387e-01   2.3213e-01   1.1808e-01   6.2187e-02   3.5377e-02   2.2145e-02   1.4652e-02   9.5222e-03   6.8589e-03   4.0475e-03   3.2135e-03   2.4231e-03   1.3268e-03   1.0853e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 157286
1.06066e+15
17.9883


Computed autocorrelation coefficients (via fft), for subchain beggining at position 157286 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   9.1382e-01   8.3490e-01   6.9676e-01   5.8172e-01   4.8615e-01   4.0630e-01   3.3930e-01   2.8356e-01   2.3692e-01   1.9830e-01   1.6584e-01   1.3902e-01   1.1610e-01   9.6582e-02   8.0382e-02
  E_param   6.8686e-01   4.7432e-01   2.3235e-01   1.1851e-01   6.2500e-02   3.5474e-02   2.1984e-02   1.4508e-02   9.5721e-03   6.8353e-03   3.7961e-03   3.2489e-03   2.7481e-03   1.7407e-03   1.1494e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 209715
1.33035e+15
17.7049


Computed autocorrelation coefficients (via fft), for subchain beggining at position 209715 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   9.1381e-01   8.3490e-01   6.9677e-01   5.8167e-01   4.8593e-01   4.0571e-01   3.3844e-01   2.8252e-01   2.3569e-01   1.9678e-01   1.6423e-01   1.3742e-01   1.1456e-01   9.5156e-02   7.8976e-02
  E_param   6.8636e-01   4.7392e-01   2.3221e-01   1.1870e-01   6.3024e-02   3.5780e-02   2.2171e-02   1.4813e-02   1.0304e-02   7.4131e-03   4.0663e-03   3.1126e-03   2.7102e-03   1.7628e-03   1.1538e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 262144
1.89044e+14
38.3219


Computed autocorrelation coefficients (via fft), for subchain beggining at position 262144 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   9.1377e-01   8.3491e-01   6.9664e-01   5.8133e-01   4.8569e-01   4.0556e-01   3.3824e-01   2.8222e-01   2.3532e-01   1.9631e-01   1.6378e-01   1.3718e-01   1.1450e-01   9.5063e-02   7.8790e-02
  E_param   6.8625e-01   4.7376e-01   2.3173e-01   1.1840e-01   6.3043e-02   3.6116e-02   2.2409e-02   1.4745e-02   1.0228e-02   7.2347e-03   3.8828e-03   3.0049e-03   2.6157e-03   1.9058e-03   1.3282e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 314572
3.03668e+14
46.0889


Computed autocorrelation coefficients (via fft), for subchain beggining at position 314572 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   9.1371e-01   8.3485e-01   6.9651e-01   5.8119e-01   4.8553e-01   4.0536e-01   3.3789e-01   2.8165e-01   2.3478e-01   1.9586e-01   1.6347e-01   1.3687e-01   1.1394e-01   9.4321e-02   7.7976e-02
  E_param   6.8611e-01   4.7368e-01   2.3130e-01   1.1794e-01   6.2921e-02   3.5779e-02   2.1919e-02   1.4372e-02   9.5918e-03   7.1795e-03   4.1196e-03   3.6951e-03   3.2279e-03   2.3419e-03   1.4632e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 367001
4.267e+14
6.76771


Computed autocorrelation coefficients (via fft), for subchain beggining at position 367001 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   9.1384e-01   8.3511e-01   6.9711e-01   5.8211e-01   4.8675e-01   4.0663e-01   3.3920e-01   2.8279e-01   2.3592e-01   1.9721e-01   1.6495e-01   1.3828e-01   1.1544e-01   9.5624e-02   7.8994e-02
  E_param   6.8632e-01   4.7421e-01   2.3214e-01   1.1866e-01   6.3527e-02   3.5865e-02   2.1569e-02   1.4063e-02   9.7192e-03   7.3606e-03   4.1103e-03   2.6906e-03   2.3546e-03   1.3041e-03   9.5274e-04

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 419430
3.70545e+14
6.9181


Computed autocorrelation coefficients (via fft), for subchain beggining at position 419430 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   9.1381e-01   8.3503e-01   6.9688e-01   5.8151e-01   4.8585e-01   4.0566e-01   3.3838e-01   2.8240e-01   2.3617e-01   1.9803e-01   1.6624e-01   1.3985e-01   1.1718e-01   9.7456e-02   8.0901e-02
  E_param   6.8639e-01   4.7421e-01   2.3244e-01   1.1884e-01   6.4018e-02   3.6237e-02   2.1782e-02   1.4228e-02   1.0140e-02   8.1306e-03   4.9140e-03   4.1434e-03   3.1884e-03   2.4823e-03   2.3876e-03
Chain autocorrelation (via fft) took 101.202 seconds
All statistics took 112.506 seconds

-----------------------------------------------------
 Finished computing statistics for chain s1_cal_mc_chain
-----------------------------------------------------

Entering uqSequenceOfVectors<V,M>::filter(): initialPos = 0, spacing = 20, sequenceSize = 1048576
Leaving uqSequenceOfVectors<V,M>::filter(): initialPos = 0, spacing = 20, sequenceSize = 52429


-----------------------------------------------------
 Computing statistics for chain s1_cal_mc_filteredChain ...
-----------------------------------------------------

In uqBaseVectorSequence<V,M>::computeStatistics(): initial positions for statistics = 0

-----------------------------------------------------
Computing mean, sample variance and population variance

Estimated variance of sample mean for the whole chain s1_cal_mc_filteredChain, under independence assumption:
2.55465e+15
134.286

Mean and variances took 0.041256 seconds

Mean, sample std, population std
Parameter    Mean         SampleStd         Popul.Std
 A_param   2.5992e+11   1.1573e+10   1.1573e+10
 E_param   1.9685e+05   2.6534e+03   2.6534e+03

-----------------------------------------------------
Computing autocorrelation coefficients (via fft)
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): lags for autocorrelation (via fft) =  1 2 4 6 8 10 12 14 16 18 20 22 24 26 28
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 0, numPos = 52429, lagsForCorrs.size() = 15, corrVecs.size() = 15

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 0
3.26639e+14
71.8832


Computed autocorrelation coefficients (via fft), for subchain beggining at position 0 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   1.6567e-01   2.4913e-02   2.2669e-03  -6.9698e-03  -9.9067e-04  -1.9893e-03   4.2242e-03  -3.6585e-03  -9.0321e-04   4.0431e-04  -1.6593e-03   1.5166e-03   5.6978e-03   8.2668e-03   4.4911e-03
  E_param   2.0773e-03  -8.5830e-04   4.0974e-03  -4.7661e-03   3.5235e-03   7.2892e-04  -3.8689e-03   1.7157e-03   2.7519e-03  -2.6201e-03   1.1309e-03  -1.2623e-03   3.4097e-03  -1.1040e-03   5.7260e-04
Chain autocorrelation (via fft) took 0.495659 seconds


-----------------------------------------------------
 Computing histogram and/or KDE for chain s1_cal_mc_filteredChain ...
-----------------------------------------------------


-----------------------------------------------------
Computing min and max for histograms and KDE

Computed min values and max values for chain s1_cal_mc_filteredChain
Parameter         min         max
 A_param   2.4000e+11   2.8000e+11
 E_param   1.8444e+05   2.1900e+05
Chain min and max took 0.01774 seconds

-----------------------------------------------------
Computing histograms
Chain histograms took 0.016027 seconds

-----------------------------------------------------
Computing KDE

Computed inter quantile ranges for chain s1_cal_mc_filteredChain
Parameter         iqr
 A_param   2.0045e+10
 E_param   3.4842e+03
Chain KDE took 2.32882 seconds

-----------------------------------------------------
 Finished computing histogram and/or KDE for chain s1_cal_mc_filteredChain
-----------------------------------------------------

All statistics took 2.9071 seconds

-----------------------------------------------------
 Finished computing statistics for chain s1_cal_mc_filteredChain
-----------------------------------------------------

Closed output file 's1ExtraOutput.m' for chain s1_cal_mc_filteredChain

In uqSequentialVectorRealizer<V,M>::constructor(): m_chain.sequenceSize() = 52429
Opening output file 's1Output.m' for calibration problem with problem with prefix = s1_cal_
Closed output file 's1Output.m' for calibration problem with problem with prefix = s1_cal_

Entering uqPropagProblem<P_V,P_M,Q_V,Q_M>::constructor(): prefix = s1_pro_
UQ Propagation Problem:
  --s1_pro_help                     produce help message for propagation proble
                                    m
  --s1_pro_computeSolution arg (=1) compute solution process
  --s1_pro_outputFileName arg (=.)  name of output file

In uqPropagProblem<P_V,P_M,Q_V,Q_M>::constructor(): after getting values of options, state of object is:

s1_pro_computeSolution = 1
s1_pro_outputFileName = s1Output.m

Leaving uqPropagProblem<P_V,P_M,Q_V,Q_M>::constructor(): prefix = s1_pro_
Entering uqMonteCarloSG<P_V,P_M,Q_V,Q_M>::constructor()
Monte Carlo options:
  --s1_pro_mc_help                     produce help message for Monte Carlo dis
                                       tribution calculator
  --s1_pro_mc_numSamples arg (=100)    number of samples
  --s1_pro_mc_outputFileName arg (=.)  name of output file
  --s1_pro_mc_use2 arg (=0)            use seq2
  --s1_pro_mc_displayPeriod arg (=500) period of message display during sequenc
                                       e generation
  --s1_pro_mc_measureRunTimes arg (=0) measure run times
  --s1_pro_mc_write arg (=0)           write sequence values to the output file
  --s1_pro_mc_computeStats arg (=0)    compute statistics on sequence of qoi

In uqMonteCarloSG<P_V,P_M,Q_V,Q_M>::constructor(): after getting values of options with prefix 's1_pro_mc_', state of  object is:
s1_pro_mc_numSamples = 1048576
s1_pro_mc_outputFileName = s1ExtraOutput.m
s1_pro_mc_displayPeriod = 20000
s1_pro_mc_measureRunTimes = 1
s1_pro_mc_write = 0
s1_pro_mc_computeStats = 1
Entering uqChainStatisticalOptions::constructor(), prefix = s1_pro_mc_seq_stats_
After getting values of options with prefix 's1_pro_mc_seq_stats_', state of uqChainStatisticalOptions object is:

s1_pro_mc_seq_stats_initialDiscardedPortions = 0 
s1_pro_mc_seq_stats_bmm_run = 0
s1_pro_mc_seq_stats_bmm_lengths = 50 100 200 250 
s1_pro_mc_seq_stats_fft_compute = 0
s1_pro_mc_seq_stats_fft_paramId = 0
s1_pro_mc_seq_stats_fft_size = 2048
s1_pro_mc_seq_stats_fft_testInversion = 1
s1_pro_mc_seq_stats_fft_write = 1
s1_pro_mc_seq_stats_psd_compute = 0
s1_pro_mc_seq_stats_psd_paramId = 0
s1_pro_mc_seq_stats_psd_numBlocks = 8
s1_pro_mc_seq_stats_psd_hopSizeRatio = 0.5
s1_pro_mc_seq_stats_psd_write = 1
s1_pro_mc_seq_stats_psdAtZero_compute = 0
s1_pro_mc_seq_stats_psdAtZero_numBlocks = 32 
s1_pro_mc_seq_stats_psdAtZero_hopSizeRatio = 0.5
s1_pro_mc_seq_stats_psdAtZero_display = 1
s1_pro_mc_seq_stats_psdAtZero_write = 1
s1_pro_mc_seq_stats_geweke_compute = 0
s1_pro_mc_seq_stats_geweke_naRatio = 0.1
s1_pro_mc_seq_stats_geweke_nbRatio = 0.5
s1_pro_mc_seq_stats_geweke_display = 1
s1_pro_mc_seq_stats_geweke_write = 1
s1_pro_mc_seq_stats_corr_computeViaDef = 0
s1_pro_mc_seq_stats_corr_computeViaFft = 1
s1_pro_mc_seq_stats_corr_secondLag = 2
s1_pro_mc_seq_stats_corr_lagSpacing = 1
s1_pro_mc_seq_stats_corr_numLags = 15
s1_pro_mc_seq_stats_corr_display = 1
s1_pro_mc_seq_stats_corr_write = 1
s1_pro_mc_seq_stats_hist_compute = 1
s1_pro_mc_seq_stats_hist_numInternalBins = 250
s1_pro_mc_seq_stats_kde_compute = 1
s1_pro_mc_seq_stats_kde_numEvalPositions = 250

Leaving uqChainStatisticalOptions::constructor(), prefix = s1_pro_mc_seq_stats_
Leaving uqMonteCarloSG<P_V,P_M,Q_V,Q_M>::constructor()
In uqMonteCarloSG<P_V,P_M,Q_V,Q_M>::intGenerateSequence(): m_numSamples = 1048576, paramRv.realizer().period() = 52429
Starting the generation of qoi sequence s1_pro_mc_seq, with 52429 samples...
Finished generating 20000 qoi samples
Finished generating 40000 qoi samples
Finished the generation of qoi sequence s1_pro_mc_seq, with 52429 samples
Some information about this sequence:
  Sequence run time = 1.34553 seconds

 Breaking of the seq run time:

  QoI function run time   = 1.27354 seconds (94.6496%)Opening output file 's1ExtraOutput.m' for qoi sequence s1_pro_mc_seq


-----------------------------------------------------
 Computing statistics for chain s1_pro_mc_seq ...
-----------------------------------------------------

In uqBaseVectorSequence<V,M>::computeStatistics(): initial positions for statistics = 0

-----------------------------------------------------
Computing mean, sample variance and population variance

Estimated variance of sample mean for the whole chain s1_pro_mc_seq, under independence assumption:
2.59241e-07

Mean and variances took 0.018001 seconds

Mean, sample std, population std
Parameter    Mean         SampleStd         Popul.Std
TimeFor2   3.3518e-01   1.1658e-01   1.1658e-01

-----------------------------------------------------
Computing autocorrelation coefficients (via fft)
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): lags for autocorrelation (via fft) =  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 0, numPos = 52429, lagsForCorrs.size() = 15, corrVecs.size() = 15

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 0
1.48909e-07


Computed autocorrelation coefficients (via fft), for subchain beggining at position 0 (each column corresponds to a different lag)
Parameter            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15
TimeFor25  -1.2955e-03  -1.9516e-03  -4.8987e-03   2.9581e-03   2.4750e-03  -4.0050e-03   2.3664e-03   3.8542e-03   1.4052e-03   1.8384e-03  -7.2028e-03  -2.9281e-03  -8.6498e-04   2.2164e-03  -9.1137e-03
Chain autocorrelation (via fft) took 0.247694 seconds


-----------------------------------------------------
 Computing histogram and/or KDE for chain s1_pro_mc_seq ...
-----------------------------------------------------


-----------------------------------------------------
Computing min and max for histograms and KDE

Computed min values and max values for chain s1_pro_mc_seq
Parameter         min         max
TimeFor2   5.2328e-03   9.4166e-01
Chain min and max took 0.00791 seconds

-----------------------------------------------------
Computing histograms
Chain histograms took 0.006731 seconds

-----------------------------------------------------
Computing KDE

Computed inter quantile ranges for chain s1_pro_mc_seq
Parameter         iqr
TimeFor2   1.6040e-01
Chain KDE took 1.268 seconds

-----------------------------------------------------
 Finished computing histogram and/or KDE for chain s1_pro_mc_seq
-----------------------------------------------------

All statistics took 1.55181 seconds

-----------------------------------------------------
 Finished computing statistics for chain s1_pro_mc_seq
-----------------------------------------------------

Closed output file 's1ExtraOutput.m' for qoi sequence s1_pro_mc_seq

In uqSequentialVectorRealizer<V,M>::constructor(): m_chain.sequenceSize() = 52429
Opening output file 's1Output.m' for propagation problem with problem with prefix = s1_pro_
Closed output file 's1Output.m' for propagation problem with problem with prefix = s1_pro_

Ending stage 1 at Tue Oct 21 17:48:49 2008
Total s1 run time = 196 seconds
Beginning stage 2 at Tue Oct 21 17:48:49 2008

Entering uqCalibProblem<P_V,P_M>::constructor(): prefix = s2_cal_
UQ Calibration Problem:
  --s2_cal_help                     produce help message for calibration proble
                                    m
  --s2_cal_computeSolution arg (=1) compute solution process
  --s2_cal_outputFileName arg (=.)  name of output file

In uqCalibProblem<P_V,P_M>::constructor(): after getting values of options, state of object is:

s2_cal_computeSolution = 1
s2_cal_outputFileName = s2Output.m

Leaving uqCalibProblem<P_V,P_M>::constructor(): prefix = s2_cal_
In uqVectorSpace<V,M>::newGaussianMatrix(): i = 0, variance = 1.33938e+20
In uqVectorSpace<V,M>::newGaussianMatrix(): i = 1, variance = 7.04049e+06
Entering uqMarkovChainSG<P_V,P_M>::constructor()
Bayesian Markov chain options:
  --s2_cal_mc_help                                     produce help message for
                                                       Bayesian Markov chain 
                                                       distr. calculator
  --s2_cal_mc_chain_type arg (=1)                      type of chain (1=Markov,
                                                       2=White noise)
  --s2_cal_mc_chain_size arg (=100)                    size of chain
  --s2_cal_mc_chain_outputFileName arg (=.)            name of output file
  --s2_cal_mc_chain_use2 arg (=0)                      use chain2
  --s2_cal_mc_chain_generateExtra arg (=0)             generate extra chains
  --s2_cal_mc_chain_displayPeriod arg (=500)           period of message 
                                                       display during chain 
                                                       generation
  --s2_cal_mc_chain_measureRunTimes arg (=0)           measure run times
  --s2_cal_mc_chain_write arg (=0)                     write chain values to 
                                                       the output file
  --s2_cal_mc_chain_computeStats arg (=0)              compute statistics on 
                                                       chain
  --s2_cal_mc_filteredChain_generate arg (=0)          generate filtered chain
  --s2_cal_mc_filteredChain_discardedPortion arg (=0)  initial discarded 
                                                       portion for chain 
                                                       filtering
  --s2_cal_mc_filteredChain_lag arg (=1)               spacing for chain 
                                                       filtering
  --s2_cal_mc_filteredChain_write arg (=0)             write filtered chain
  --s2_cal_mc_filteredChain_computeStats arg (=0)      compute statistics on 
                                                       filtered chain
  --s2_cal_mc_dr_maxNumExtraStages arg (=0)            'dr' maximum number of 
                                                       extra stages
  --s2_cal_mc_dr_scalesForExtraStages arg (=1.)        'dr' list of scales for 
                                                       proposal cov matrices 
                                                       from 2nd stage on
  --s2_cal_mc_am_initialNonAdaptInterval arg (=0)      'am' initial non 
                                                       adaptation interval
  --s2_cal_mc_am_adaptInterval arg (=0)                'am' adaptation interval
  --s2_cal_mc_am_eta arg (=1)                          'am' eta
  --s2_cal_mc_am_epsilon arg (=1.0000000000000001e-05) 'am' epsilon

In uqMarkovChainSG<P_V,P_M>::constructor(): after getting values of options with prefix 's2_cal_mc_', state of  object is:
s2_cal_mc_chain_type = 1
s2_cal_mc_chain_size = 1048576
s2_cal_mc_chain_outputFileName = s2ExtraOutput.m
s2_cal_mc_chain_generateExtra = 0
s2_cal_mc_chain_displayPeriod = 20000
s2_cal_mc_chain_measureRunTimes = 1
s2_cal_mc_chain_write = 0
s2_cal_mc_chain_computeStats = 1
s2_cal_mc_filteredChain_generate = 1
s2_cal_mc_filteredChain_discardedPortion = 0
s2_cal_mc_filteredChain_lag = 20
s2_cal_mc_filteredChain_write = 0
s2_cal_mc_filteredChain_computeStats = 1
s2_cal_mc_dr_maxNumExtraStages = 1
s2_cal_mc_dr_scalesForExtraStages = 1 5 
s2_cal_mc_am_initialNonAdaptInterval = 0
s2_cal_mc_am_adaptInterval = 100
s2_cal_mc_am_eta = 1.92
s2_cal_mc_am_epsilon = 1e-05

Entering uqChainStatisticalOptions::constructor(), prefix = s2_cal_mc_chain_stats_
After getting values of options with prefix 's2_cal_mc_chain_stats_', state of uqChainStatisticalOptions object is:

s2_cal_mc_chain_stats_initialDiscardedPortions = 0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 
s2_cal_mc_chain_stats_bmm_run = 0
s2_cal_mc_chain_stats_bmm_lengths = 50 100 200 250 
s2_cal_mc_chain_stats_fft_compute = 0
s2_cal_mc_chain_stats_fft_paramId = 0
s2_cal_mc_chain_stats_fft_size = 2048
s2_cal_mc_chain_stats_fft_testInversion = 1
s2_cal_mc_chain_stats_fft_write = 1
s2_cal_mc_chain_stats_psd_compute = 0
s2_cal_mc_chain_stats_psd_paramId = 0
s2_cal_mc_chain_stats_psd_numBlocks = 8
s2_cal_mc_chain_stats_psd_hopSizeRatio = 0.5
s2_cal_mc_chain_stats_psd_write = 1
s2_cal_mc_chain_stats_psdAtZero_compute = 0
s2_cal_mc_chain_stats_psdAtZero_numBlocks = 32 
s2_cal_mc_chain_stats_psdAtZero_hopSizeRatio = 0.5
s2_cal_mc_chain_stats_psdAtZero_display = 1
s2_cal_mc_chain_stats_psdAtZero_write = 1
s2_cal_mc_chain_stats_geweke_compute = 1
s2_cal_mc_chain_stats_geweke_naRatio = 0.1
s2_cal_mc_chain_stats_geweke_nbRatio = 0.5
s2_cal_mc_chain_stats_geweke_display = 1
s2_cal_mc_chain_stats_geweke_write = 1
s2_cal_mc_chain_stats_corr_computeViaDef = 0
s2_cal_mc_chain_stats_corr_computeViaFft = 1
s2_cal_mc_chain_stats_corr_secondLag = 2
s2_cal_mc_chain_stats_corr_lagSpacing = 2
s2_cal_mc_chain_stats_corr_numLags = 15
s2_cal_mc_chain_stats_corr_display = 1
s2_cal_mc_chain_stats_corr_write = 1
s2_cal_mc_chain_stats_hist_compute = 0
s2_cal_mc_chain_stats_hist_numInternalBins = 250
s2_cal_mc_chain_stats_kde_compute = 0
s2_cal_mc_chain_stats_kde_numEvalPositions = 250

Leaving uqChainStatisticalOptions::constructor(), prefix = s2_cal_mc_chain_stats_
Entering uqChainStatisticalOptions::constructor(), prefix = s2_cal_mc_filteredChain_stats_
After getting values of options with prefix 's2_cal_mc_filteredChain_stats_', state of uqChainStatisticalOptions object is:

s2_cal_mc_filteredChain_stats_initialDiscardedPortions = 0 
s2_cal_mc_filteredChain_stats_bmm_run = 0
s2_cal_mc_filteredChain_stats_bmm_lengths = 50 100 200 250 
s2_cal_mc_filteredChain_stats_fft_compute = 0
s2_cal_mc_filteredChain_stats_fft_paramId = 0
s2_cal_mc_filteredChain_stats_fft_size = 2048
s2_cal_mc_filteredChain_stats_fft_testInversion = 1
s2_cal_mc_filteredChain_stats_fft_write = 1
s2_cal_mc_filteredChain_stats_psd_compute = 0
s2_cal_mc_filteredChain_stats_psd_paramId = 0
s2_cal_mc_filteredChain_stats_psd_numBlocks = 8
s2_cal_mc_filteredChain_stats_psd_hopSizeRatio = 0.5
s2_cal_mc_filteredChain_stats_psd_write = 1
s2_cal_mc_filteredChain_stats_psdAtZero_compute = 0
s2_cal_mc_filteredChain_stats_psdAtZero_numBlocks = 32 
s2_cal_mc_filteredChain_stats_psdAtZero_hopSizeRatio = 0.5
s2_cal_mc_filteredChain_stats_psdAtZero_display = 1
s2_cal_mc_filteredChain_stats_psdAtZero_write = 1
s2_cal_mc_filteredChain_stats_geweke_compute = 0
s2_cal_mc_filteredChain_stats_geweke_naRatio = 0.1
s2_cal_mc_filteredChain_stats_geweke_nbRatio = 0.5
s2_cal_mc_filteredChain_stats_geweke_display = 1
s2_cal_mc_filteredChain_stats_geweke_write = 1
s2_cal_mc_filteredChain_stats_corr_computeViaDef = 0
s2_cal_mc_filteredChain_stats_corr_computeViaFft = 1
s2_cal_mc_filteredChain_stats_corr_secondLag = 2
s2_cal_mc_filteredChain_stats_corr_lagSpacing = 2
s2_cal_mc_filteredChain_stats_corr_numLags = 15
s2_cal_mc_filteredChain_stats_corr_display = 1
s2_cal_mc_filteredChain_stats_corr_write = 1
s2_cal_mc_filteredChain_stats_hist_compute = 1
s2_cal_mc_filteredChain_stats_hist_numInternalBins = 250
s2_cal_mc_filteredChain_stats_kde_compute = 1
s2_cal_mc_filteredChain_stats_kde_numEvalPositions = 250

Leaving uqChainStatisticalOptions::constructor(), prefix = s2_cal_mc_filteredChain_stats_
Leaving uqMarkovChainSG<P_V,P_M>::constructor()
In uqMarkovChainSG<P_V,P_M>::prepareForNextChain(): using suplied proposalCovMatrix, whose contents are:
1.33938e+20 0 
0 7.04049e+06 

In uqMarkovChainSG<P_V,P_M>::prepareForNextChain(), m_lowerCholProposalCovMatrices[0] contents are:
1.15731e+10 0 
0 2653.39 

Starting the generation of Markov chain s2_cal_mc_chain, with 1048576 positions...
In uqMarkovChainSG<P_V,P_M>::intGenerateSequence(): contents of initial position are:
2.59918e+11 196852 
Finished generating 20000 positions
Finished generating 40000 positions
Finished generating 60000 positions
Finished generating 80000 positions
Finished generating 100000 positions
Finished generating 120000 positions
Finished generating 140000 positions
Finished generating 160000 positions
Finished generating 180000 positions
Finished generating 200000 positions
Finished generating 220000 positions
Finished generating 240000 positions
Finished generating 260000 positions
Finished generating 280000 positions
Finished generating 300000 positions
Finished generating 320000 positions
Finished generating 340000 positions
Finished generating 360000 positions
Finished generating 380000 positions
Finished generating 400000 positions
Finished generating 420000 positions
Finished generating 440000 positions
Finished generating 460000 positions
Finished generating 480000 positions
Finished generating 500000 positions
Finished generating 520000 positions
Finished generating 540000 positions
Finished generating 560000 positions
Finished generating 580000 positions
Finished generating 600000 positions
Finished generating 620000 positions
Finished generating 640000 positions
Finished generating 660000 positions
Finished generating 680000 positions
Finished generating 700000 positions
Finished generating 720000 positions
Finished generating 740000 positions
Finished generating 760000 positions
Finished generating 780000 positions
Finished generating 800000 positions
Finished generating 820000 positions
Finished generating 840000 positions
Finished generating 860000 positions
Finished generating 880000 positions
Finished generating 900000 positions
Finished generating 920000 positions
Finished generating 940000 positions
Finished generating 960000 positions
Finished generating 980000 positions
Finished generating 1000000 positions
Finished generating 1020000 positions
Finished generating 1040000 positions
Finished the generation of Markov chain s2_cal_mc_chain, with 1048576 positions
Some information about this chain:
  Chain run time       = 94.8366 seconds

 Breaking of the chain run time:

  Candidate run time   = 3.76785 seconds (3.97299%)
  Target d. run time   = 83.5024 seconds (88.0486%)
  Mh alpha run time    = 0.827066 seconds (0.872095%)
  Dr alpha run time    = 1.35554 seconds (1.42934%)
----------------------   --------------
  Sum                  = 89.4528 seconds (94.323%)

 Other run times:
  DR run time          = 25.1054 seconds (26.4722%)
  AM run time          = 0 seconds (0%)
  Rejection percentage = 27.9982 %
   Outbound percentage = 23.1186 %
Opening output file 's2ExtraOutput.m' for chain s2_cal_mc_chain


-----------------------------------------------------
 Computing statistics for chain s2_cal_mc_chain ...
-----------------------------------------------------

In uqBaseVectorSequence<V,M>::computeStatistics(): initial positions for statistics = 0 52428 104857 157286 209715 262144 314572 367001 419430

-----------------------------------------------------
Computing mean, sample variance and population variance

Estimated variance of sample mean for the whole chain s2_cal_mc_chain, under independence assumption:
1.2721e+14
4.46914

Mean and variances took 0.95594 seconds

Mean, sample std, population std
Parameter    Mean         SampleStd         Popul.Std
 A_param   2.6003e+11   1.1549e+10   1.1549e+10
 E_param   1.9722e+05   2.1648e+03   2.1648e+03

-----------------------------------------------------
Computing Geweke coefficients
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 104857, numBlocksA = 323, meanA = 2.60101e+11, psdA = 2.17708e+20, varOfMeanA = 1.30454e+16
, dataSizeB = 524288, numBlocksB = 724, meanB = 2.60056e+11, psdB = 2.19398e+20, varOfMeanB = 2.62932e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 104857, numBlocksA = 323, meanA = 197250, psdA = 7.13189e+06, varOfMeanA = 427.354
, dataSizeB = 524288, numBlocksB = 724, meanB = 197207, psdB = 7.46976e+06, varOfMeanB = 89.5193
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 99614, numBlocksA = 315, meanA = 2.60062e+11, psdA = 2.09263e+20, varOfMeanA = 1.31993e+16
, dataSizeB = 498074, numBlocksB = 705, meanB = 2.60042e+11, psdB = 2.16362e+20, varOfMeanB = 2.72939e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 99614, numBlocksA = 315, meanA = 197264, psdA = 5.89357e+06, varOfMeanA = 371.739
, dataSizeB = 498074, numBlocksB = 705, meanB = 197209, psdB = 7.50602e+06, varOfMeanB = 94.6881
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 94371, numBlocksA = 307, meanA = 2.60006e+11, psdA = 2.08235e+20, varOfMeanA = 1.38642e+16
, dataSizeB = 471859, numBlocksB = 686, meanB = 2.60051e+11, psdB = 2.15543e+20, varOfMeanB = 2.87013e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 94371, numBlocksA = 307, meanA = 197267, psdA = 5.43058e+06, varOfMeanA = 361.566
, dataSizeB = 471859, numBlocksB = 686, meanB = 197212, psdB = 7.57617e+06, varOfMeanB = 100.883
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 89129, numBlocksA = 298, meanA = 2.59893e+11, psdA = 1.97689e+20, varOfMeanA = 1.39362e+16
, dataSizeB = 445645, numBlocksB = 667, meanB = 2.60054e+11, psdB = 2.18072e+20, varOfMeanB = 3.07462e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 89129, numBlocksA = 298, meanA = 197226, psdA = 6.93596e+06, varOfMeanA = 488.953
, dataSizeB = 445645, numBlocksB = 667, meanB = 197210, psdB = 7.39308e+06, varOfMeanB = 104.236
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 83886, numBlocksA = 289, meanA = 2.59967e+11, psdA = 1.98345e+20, varOfMeanA = 1.48563e+16
, dataSizeB = 419430, numBlocksB = 647, meanB = 2.60039e+11, psdB = 2.12885e+20, varOfMeanB = 3.18909e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 83886, numBlocksA = 289, meanA = 197237, psdA = 7.33205e+06, varOfMeanA = 549.181
, dataSizeB = 419430, numBlocksB = 647, meanB = 197212, psdB = 7.46054e+06, varOfMeanB = 111.761
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 78643, numBlocksA = 280, meanA = 2.60019e+11, psdA = 1.99719e+20, varOfMeanA = 1.59566e+16
, dataSizeB = 393216, numBlocksB = 627, meanB = 2.60038e+11, psdB = 2.2236e+20, varOfMeanB = 3.55308e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 78643, numBlocksA = 280, meanA = 197200, psdA = 6.5324e+06, varOfMeanA = 521.907
, dataSizeB = 393216, numBlocksB = 627, meanB = 197215, psdB = 7.25454e+06, varOfMeanB = 115.92
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 73400, numBlocksA = 270, meanA = 2.5995e+11, psdA = 2.01327e+20, varOfMeanA = 1.7234e+16
, dataSizeB = 367002, numBlocksB = 605, meanB = 2.60052e+11, psdB = 2.14641e+20, varOfMeanB = 3.67473e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 73400, numBlocksA = 270, meanA = 197214, psdA = 6.02353e+06, varOfMeanA = 515.626
, dataSizeB = 367002, numBlocksB = 605, meanB = 197216, psdB = 7.24746e+06, varOfMeanB = 124.079
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 68157, numBlocksA = 261, meanA = 2.6022e+11, psdA = 2.46817e+20, varOfMeanA = 2.27533e+16
, dataSizeB = 340787, numBlocksB = 583, meanB = 2.60068e+11, psdB = 2.14182e+20, varOfMeanB = 3.94893e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 68157, numBlocksA = 261, meanA = 197247, psdA = 6.53879e+06, varOfMeanA = 602.791
, dataSizeB = 340787, numBlocksB = 583, meanB = 197217, psdB = 7.13468e+06, varOfMeanB = 131.544
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 62914, numBlocksA = 250, meanA = 2.60276e+11, psdA = 2.18725e+20, varOfMeanA = 2.1844e+16
, dataSizeB = 314573, numBlocksB = 560, meanB = 2.60061e+11, psdB = 2.19221e+20, varOfMeanB = 4.37866e+15
In uqScalarSequence<T>::geweke(), before computation of gewCoef:
, dataSizeA = 62914, numBlocksA = 250, meanA = 197272, psdA = 7.46243e+06, varOfMeanA = 745.269
, dataSizeB = 314573, numBlocksB = 560, meanB = 197218, psdB = 6.87312e+06, varOfMeanB = 137.282

Computed Geweke coefficients with 10% and 50% percentages (each column corresponds to a different initial position on the full chain)
Parameter            0          52428          104857          157286          209715          262144          314572          367001          419430
  A_param   3.6567e-01   1.5602e-01  -3.4929e-01  -1.2364e+00  -5.3705e-01  -1.3359e-01  -7.0420e-01   9.3050e-01   1.3263e+00
  E_param   1.8623e+00   2.5200e+00   2.5719e+00   6.2740e-01   9.4763e-01  -5.7140e-01  -9.9112e-02   1.0837e+00   1.8046e+00
Chain Geweke took 9.84957 seconds

-----------------------------------------------------
Computing autocorrelation coefficients (via fft)
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): lags for autocorrelation (via fft) =  1 2 4 6 8 10 12 14 16 18 20 22 24 26 28
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 0, numPos = 1048576, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 52428, numPos = 996148, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 104857, numPos = 943719, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 157286, numPos = 891290, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 209715, numPos = 838861, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 262144, numPos = 786432, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 314572, numPos = 734004, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 367001, numPos = 681575, lagsForCorrs.size() = 15, corrVecs.size() = 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 419430, numPos = 629146, lagsForCorrs.size() = 15, corrVecs.size() = 15

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 0
9.77398e+13
37.9322


Computed autocorrelation coefficients (via fft), for subchain beggining at position 0 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   8.2257e-01   6.7685e-01   4.5900e-01   3.1154e-01   2.1123e-01   1.4390e-01   9.8524e-02   6.7750e-02   4.7346e-02   3.4182e-02   2.4291e-02   1.7015e-02   1.2278e-02   9.4426e-03   7.1107e-03
  E_param   7.8759e-01   6.2443e-01   4.0003e-01   2.6050e-01   1.7180e-01   1.1275e-01   7.4057e-02   4.8124e-02   3.2185e-02   2.1120e-02   1.3673e-02   8.6803e-03   4.6817e-03   2.1334e-03  -3.3198e-04

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 52428
1.62115e+14
31.4641


Computed autocorrelation coefficients (via fft), for subchain beggining at position 52428 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   8.2243e-01   6.7664e-01   4.5874e-01   3.1135e-01   2.1112e-01   1.4394e-01   9.8947e-02   6.8333e-02   4.7931e-02   3.4700e-02   2.4597e-02   1.7133e-02   1.2497e-02   9.7347e-03   7.4318e-03
  E_param   7.8753e-01   6.2433e-01   4.0018e-01   2.6070e-01   1.7188e-01   1.1254e-01   7.3583e-02   4.7660e-02   3.1575e-02   2.0331e-02   1.2636e-02   7.4914e-03   3.7548e-03   1.5509e-03  -6.9934e-04

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 104857
2.27241e+14
23.4534


Computed autocorrelation coefficients (via fft), for subchain beggining at position 104857 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   8.2228e-01   6.7637e-01   4.5848e-01   3.1098e-01   2.1068e-01   1.4316e-01   9.8019e-02   6.7438e-02   4.7317e-02   3.4163e-02   2.4192e-02   1.6946e-02   1.2623e-02   1.0271e-02   8.1032e-03
  E_param   7.8726e-01   6.2390e-01   3.9968e-01   2.5995e-01   1.7080e-01   1.1159e-01   7.2882e-02   4.6981e-02   3.0921e-02   1.9841e-02   1.2333e-02   7.2941e-03   3.6436e-03   1.5683e-03  -7.3641e-04

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 157286
3.70902e+14
6.73553


Computed autocorrelation coefficients (via fft), for subchain beggining at position 157286 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   8.2260e-01   6.7688e-01   4.5933e-01   3.1202e-01   2.1183e-01   1.4439e-01   9.9160e-02   6.8120e-02   4.7763e-02   3.4486e-02   2.4456e-02   1.7087e-02   1.2721e-02   1.0636e-02   8.3865e-03
  E_param   7.8717e-01   6.2380e-01   4.0006e-01   2.6083e-01   1.7190e-01   1.1246e-01   7.3560e-02   4.7754e-02   3.1650e-02   2.0494e-02   1.2939e-02   7.8297e-03   4.2163e-03   1.8520e-03  -6.7172e-04

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 209715
1.76964e+14
6.58948


Computed autocorrelation coefficients (via fft), for subchain beggining at position 209715 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   8.2265e-01   6.7713e-01   4.5989e-01   3.1246e-01   2.1247e-01   1.4496e-01   9.9746e-02   6.8907e-02   4.8558e-02   3.5199e-02   2.5165e-02   1.8010e-02   1.4053e-02   1.1903e-02   9.3722e-03
  E_param   7.8734e-01   6.2414e-01   4.0037e-01   2.6072e-01   1.7150e-01   1.1237e-01   7.3728e-02   4.8024e-02   3.2098e-02   2.1069e-02   1.3350e-02   7.9173e-03   4.1217e-03   1.6276e-03  -1.4192e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 262144
9.98478e+13
6.61175


Computed autocorrelation coefficients (via fft), for subchain beggining at position 262144 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   8.2256e-01   6.7688e-01   4.5972e-01   3.1286e-01   2.1315e-01   1.4573e-01   1.0067e-01   6.9859e-02   4.9422e-02   3.6213e-02   2.6156e-02   1.9088e-02   1.5154e-02   1.3002e-02   1.0488e-02
  E_param   7.8736e-01   6.2419e-01   4.0041e-01   2.6095e-01   1.7163e-01   1.1233e-01   7.3743e-02   4.8236e-02   3.1912e-02   2.0578e-02   1.2944e-02   7.5566e-03   3.6989e-03   1.1568e-03  -1.7358e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 314572
1.34882e+14
7.8722


Computed autocorrelation coefficients (via fft), for subchain beggining at position 314572 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   8.2264e-01   6.7698e-01   4.5973e-01   3.1280e-01   2.1313e-01   1.4575e-01   1.0029e-01   6.8999e-02   4.8544e-02   3.5689e-02   2.5667e-02   1.8686e-02   1.5090e-02   1.2771e-02   1.0201e-02
  E_param   7.8732e-01   6.2396e-01   4.0017e-01   2.6102e-01   1.7163e-01   1.1220e-01   7.3186e-02   4.7486e-02   3.1392e-02   2.0392e-02   1.2729e-02   7.4262e-03   3.5451e-03   1.2155e-03  -1.6191e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 367001
1.51864e+14
18.87


Computed autocorrelation coefficients (via fft), for subchain beggining at position 367001 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   8.2262e-01   6.7698e-01   4.5951e-01   3.1242e-01   2.1297e-01   1.4642e-01   1.0110e-01   6.9986e-02   4.9415e-02   3.6291e-02   2.6444e-02   2.0089e-02   1.6592e-02   1.4656e-02   1.2010e-02
  E_param   7.8773e-01   6.2470e-01   4.0151e-01   2.6233e-01   1.7253e-01   1.1304e-01   7.4073e-02   4.8804e-02   3.2968e-02   2.1768e-02   1.3606e-02   8.0185e-03   4.0406e-03   1.4580e-03  -1.1240e-03

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 419430
1.86562e+14
18.3724


Computed autocorrelation coefficients (via fft), for subchain beggining at position 419430 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   8.2241e-01   6.7669e-01   4.5941e-01   3.1201e-01   2.1234e-01   1.4590e-01   1.0086e-01   7.0045e-02   4.9443e-02   3.5975e-02   2.5835e-02   1.9429e-02   1.5807e-02   1.3740e-02   1.1069e-02
  E_param   7.8806e-01   6.2533e-01   4.0209e-01   2.6281e-01   1.7272e-01   1.1315e-01   7.4535e-02   4.9309e-02   3.3690e-02   2.2583e-02   1.4260e-02   8.5165e-03   4.3199e-03   2.0280e-03  -6.3079e-04
Chain autocorrelation (via fft) took 104.081 seconds
All statistics took 114.887 seconds

-----------------------------------------------------
 Finished computing statistics for chain s2_cal_mc_chain
-----------------------------------------------------

Entering uqSequenceOfVectors<V,M>::filter(): initialPos = 0, spacing = 20, sequenceSize = 1048576
Leaving uqSequenceOfVectors<V,M>::filter(): initialPos = 0, spacing = 20, sequenceSize = 52429


-----------------------------------------------------
 Computing statistics for chain s2_cal_mc_filteredChain ...
-----------------------------------------------------

In uqBaseVectorSequence<V,M>::computeStatistics(): initial positions for statistics = 0

-----------------------------------------------------
Computing mean, sample variance and population variance

Estimated variance of sample mean for the whole chain s2_cal_mc_filteredChain, under independence assumption:
2.53358e+15
89.6112

Mean and variances took 0.038097 seconds

Mean, sample std, population std
Parameter    Mean         SampleStd         Popul.Std
 A_param   2.6004e+11   1.1525e+10   1.1525e+10
 E_param   1.9722e+05   2.1675e+03   2.1675e+03

-----------------------------------------------------
Computing autocorrelation coefficients (via fft)
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): lags for autocorrelation (via fft) =  1 2 4 6 8 10 12 14 16 18 20 22 24 26 28
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 0, numPos = 52429, lagsForCorrs.size() = 15, corrVecs.size() = 15

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 0
3.41488e+14
24.6911


Computed autocorrelation coefficients (via fft), for subchain beggining at position 0 (each column corresponds to a different lag)
Parameter            1            2            4            6            8           10           12           14           16           18           20           22           24           26           28
  A_param   1.7867e-02  -6.2181e-03  -8.7711e-04   4.2892e-03  -4.4239e-04  -6.4511e-03   1.2206e-03   1.7739e-04   6.2661e-03  -1.9221e-03  -5.5323e-03  -1.7307e-03  -6.3119e-04   4.4240e-03  -4.0055e-03
  E_param   1.9928e-02  -8.6392e-03  -4.6590e-03   3.0933e-03   1.4918e-03  -8.4199e-04  -3.0759e-06  -9.6729e-04  -4.4799e-04   5.6553e-03   6.7514e-03   4.0045e-03  -8.5423e-03   2.9131e-03  -1.6775e-03
Chain autocorrelation (via fft) took 0.564202 seconds


-----------------------------------------------------
 Computing histogram and/or KDE for chain s2_cal_mc_filteredChain ...
-----------------------------------------------------


-----------------------------------------------------
Computing min and max for histograms and KDE

Computed min values and max values for chain s2_cal_mc_filteredChain
Parameter         min         max
 A_param   2.4000e+11   2.8000e+11
 E_param   1.8870e+05   2.0852e+05
Chain min and max took 0.016699 seconds

-----------------------------------------------------
Computing histograms
Chain histograms took 0.014558 seconds

-----------------------------------------------------
Computing KDE

Computed inter quantile ranges for chain s2_cal_mc_filteredChain
Parameter         iqr
 A_param   1.9926e+10
 E_param   2.8819e+03
Chain KDE took 2.38046 seconds

-----------------------------------------------------
 Finished computing histogram and/or KDE for chain s2_cal_mc_filteredChain
-----------------------------------------------------

All statistics took 3.02115 seconds

-----------------------------------------------------
 Finished computing statistics for chain s2_cal_mc_filteredChain
-----------------------------------------------------

Closed output file 's2ExtraOutput.m' for chain s2_cal_mc_filteredChain

In uqSequentialVectorRealizer<V,M>::constructor(): m_chain.sequenceSize() = 52429
Opening output file 's2Output.m' for calibration problem with problem with prefix = s2_cal_
Closed output file 's2Output.m' for calibration problem with problem with prefix = s2_cal_

Entering uqPropagProblem<P_V,P_M,Q_V,Q_M>::constructor(): prefix = s2_pro_
UQ Propagation Problem:
  --s2_pro_help                     produce help message for propagation proble
                                    m
  --s2_pro_computeSolution arg (=1) compute solution process
  --s2_pro_outputFileName arg (=.)  name of output file

In uqPropagProblem<P_V,P_M,Q_V,Q_M>::constructor(): after getting values of options, state of object is:

s2_pro_computeSolution = 1
s2_pro_outputFileName = s2Output.m

Leaving uqPropagProblem<P_V,P_M,Q_V,Q_M>::constructor(): prefix = s2_pro_
Entering uqMonteCarloSG<P_V,P_M,Q_V,Q_M>::constructor()
Monte Carlo options:
  --s2_pro_mc_help                     produce help message for Monte Carlo dis
                                       tribution calculator
  --s2_pro_mc_numSamples arg (=100)    number of samples
  --s2_pro_mc_outputFileName arg (=.)  name of output file
  --s2_pro_mc_use2 arg (=0)            use seq2
  --s2_pro_mc_displayPeriod arg (=500) period of message display during sequenc
                                       e generation
  --s2_pro_mc_measureRunTimes arg (=0) measure run times
  --s2_pro_mc_write arg (=0)           write sequence values to the output file
  --s2_pro_mc_computeStats arg (=0)    compute statistics on sequence of qoi

In uqMonteCarloSG<P_V,P_M,Q_V,Q_M>::constructor(): after getting values of options with prefix 's2_pro_mc_', state of  object is:
s2_pro_mc_numSamples = 1048576
s2_pro_mc_outputFileName = s2ExtraOutput.m
s2_pro_mc_displayPeriod = 20000
s2_pro_mc_measureRunTimes = 1
s2_pro_mc_write = 0
s2_pro_mc_computeStats = 1
Entering uqChainStatisticalOptions::constructor(), prefix = s2_pro_mc_seq_stats_
After getting values of options with prefix 's2_pro_mc_seq_stats_', state of uqChainStatisticalOptions object is:

s2_pro_mc_seq_stats_initialDiscardedPortions = 0 
s2_pro_mc_seq_stats_bmm_run = 0
s2_pro_mc_seq_stats_bmm_lengths = 50 100 200 250 
s2_pro_mc_seq_stats_fft_compute = 0
s2_pro_mc_seq_stats_fft_paramId = 0
s2_pro_mc_seq_stats_fft_size = 2048
s2_pro_mc_seq_stats_fft_testInversion = 1
s2_pro_mc_seq_stats_fft_write = 1
s2_pro_mc_seq_stats_psd_compute = 0
s2_pro_mc_seq_stats_psd_paramId = 0
s2_pro_mc_seq_stats_psd_numBlocks = 8
s2_pro_mc_seq_stats_psd_hopSizeRatio = 0.5
s2_pro_mc_seq_stats_psd_write = 1
s2_pro_mc_seq_stats_psdAtZero_compute = 0
s2_pro_mc_seq_stats_psdAtZero_numBlocks = 32 
s2_pro_mc_seq_stats_psdAtZero_hopSizeRatio = 0.5
s2_pro_mc_seq_stats_psdAtZero_display = 1
s2_pro_mc_seq_stats_psdAtZero_write = 1
s2_pro_mc_seq_stats_geweke_compute = 0
s2_pro_mc_seq_stats_geweke_naRatio = 0.1
s2_pro_mc_seq_stats_geweke_nbRatio = 0.5
s2_pro_mc_seq_stats_geweke_display = 1
s2_pro_mc_seq_stats_geweke_write = 1
s2_pro_mc_seq_stats_corr_computeViaDef = 0
s2_pro_mc_seq_stats_corr_computeViaFft = 1
s2_pro_mc_seq_stats_corr_secondLag = 2
s2_pro_mc_seq_stats_corr_lagSpacing = 1
s2_pro_mc_seq_stats_corr_numLags = 15
s2_pro_mc_seq_stats_corr_display = 1
s2_pro_mc_seq_stats_corr_write = 1
s2_pro_mc_seq_stats_hist_compute = 1
s2_pro_mc_seq_stats_hist_numInternalBins = 250
s2_pro_mc_seq_stats_kde_compute = 1
s2_pro_mc_seq_stats_kde_numEvalPositions = 250

Leaving uqChainStatisticalOptions::constructor(), prefix = s2_pro_mc_seq_stats_
Leaving uqMonteCarloSG<P_V,P_M,Q_V,Q_M>::constructor()
In uqMonteCarloSG<P_V,P_M,Q_V,Q_M>::intGenerateSequence(): m_numSamples = 1048576, paramRv.realizer().period() = 52429
Starting the generation of qoi sequence s2_pro_mc_seq, with 52429 samples...
Finished generating 20000 qoi samples
Finished generating 40000 qoi samples
Finished the generation of qoi sequence s2_pro_mc_seq, with 52429 samples
Some information about this sequence:
  Sequence run time = 1.33352 seconds

 Breaking of the seq run time:

  QoI function run time   = 1.25967 seconds (94.4617%)Opening output file 's2ExtraOutput.m' for qoi sequence s2_pro_mc_seq


-----------------------------------------------------
 Computing statistics for chain s2_pro_mc_seq ...
-----------------------------------------------------

In uqBaseVectorSequence<V,M>::computeStatistics(): initial positions for statistics = 0

-----------------------------------------------------
Computing mean, sample variance and population variance

Estimated variance of sample mean for the whole chain s2_pro_mc_seq, under independence assumption:
1.81018e-07

Mean and variances took 0.023451 seconds

Mean, sample std, population std
Parameter    Mean         SampleStd         Popul.Std
TimeFor2   3.5091e-01   9.7420e-02   9.7419e-02

-----------------------------------------------------
Computing autocorrelation coefficients (via fft)
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): lags for autocorrelation (via fft) =  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
In uqBaseVectorSequence<V,M>::computeCorrViaFFT(): about to call chain.autoCorrViaFft() with initialPos = 0, numPos = 52429, lagsForCorrs.size() = 15, corrVecs.size() = 15

Estimated variance of sample mean, through autocorrelation (via fft), for subchain beggining at position 0
4.99877e-08


Computed autocorrelation coefficients (via fft), for subchain beggining at position 0 (each column corresponds to a different lag)
Parameter            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15
TimeFor25   1.8873e-02  -8.8555e-03   4.7930e-03  -4.9721e-03   6.0673e-03   3.6290e-03   2.0199e-03   2.2767e-03  -4.8302e-03   8.5897e-04   1.3442e-03  -9.2484e-05   5.8923e-03  -1.6919e-03  -3.2134e-03
Chain autocorrelation (via fft) took 0.251955 seconds


-----------------------------------------------------
 Computing histogram and/or KDE for chain s2_pro_mc_seq ...
-----------------------------------------------------


-----------------------------------------------------
Computing min and max for histograms and KDE

Computed min values and max values for chain s2_pro_mc_seq
Parameter         min         max
TimeFor2   5.0849e-02   7.8179e-01
Chain min and max took 0.009835 seconds

-----------------------------------------------------
Computing histograms
Chain histograms took 0.008714 seconds

-----------------------------------------------------
Computing KDE

Computed inter quantile ranges for chain s2_pro_mc_seq
Parameter         iqr
TimeFor2   1.3381e-01
Chain KDE took 1.26928 seconds

-----------------------------------------------------
 Finished computing histogram and/or KDE for chain s2_pro_mc_seq
-----------------------------------------------------

All statistics took 1.56666 seconds

-----------------------------------------------------
 Finished computing statistics for chain s2_pro_mc_seq
-----------------------------------------------------

Closed output file 's2ExtraOutput.m' for qoi sequence s2_pro_mc_seq

In uqSequentialVectorRealizer<V,M>::constructor(): m_chain.sequenceSize() = 52429
Opening output file 's2Output.m' for propagation problem with problem with prefix = s2_pro_
Closed output file 's2Output.m' for propagation problem with problem with prefix = s2_pro_

Ending stage 2 at Tue Oct 21 17:52:25 2008
Total s2 run time = 216 seconds
Beginning stage 3 at Tue Oct 21 17:52:25 2008

In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.02: x1 = 0.0943499, x2 = 0.61741
In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.02: maxDistance = 0.0457316, xForMaxDistance = 0.094873
For epsilonVec = 0.02 , cdfDistancesVec = 0.0457316 
In horizontalDistance(), cdf1.prefix() = s2_pro_cdf_0_, cdf2.prefix() = s1_pro_cdf_0_, epsilon = 0.02: x1 = 0.140042, x2 = 0.582376
In horizontalDistance(), cdf1.prefix() = s2_pro_cdf_0_, cdf2.prefix() = s1_pro_cdf_0_, epsilon = 0.02: maxDistance = 0.0457232, xForMaxDistance = 0.140484
For epsilonVec = 0.02 , cdfDistancesVec (swithced order of cdfs) = 0.0457232 
In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.04: x1 = 0.115665, x2 = 0.586259
In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.04: maxDistance = 0.0437074, xForMaxDistance = 0.120371
For epsilonVec = 0.04 , cdfDistancesVec = 0.0437074 
In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.06: x1 = 0.130559, x2 = 0.563962
In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.06: maxDistance = 0.0434717, xForMaxDistance = 0.141394
For epsilonVec = 0.06 , cdfDistancesVec = 0.0434717 
In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.08: x1 = 0.141072, x2 = 0.547387
In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.08: maxDistance = 0.0434765, xForMaxDistance = 0.141478
For epsilonVec = 0.08 , cdfDistancesVec = 0.0434765 
In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.1: x1 = 0.150188, x2 = 0.533447
In horizontalDistance(), cdf1.prefix() = s1_pro_cdf_0_, cdf2.prefix() = s2_pro_cdf_0_, epsilon = 0.1: maxDistance = 0.0431359, xForMaxDistance = 0.150188
For epsilonVec = 0.1 , cdfDistancesVec = 0.0431359 
Ending stage 3 at Tue Oct 21 17:52:25 2008
Total s3 run time = 0 seconds
Finishing run of 'uqTgaEx4' example
Ending run at Tue Oct 21 17:52:25 2008
Total run time = 412 seconds
